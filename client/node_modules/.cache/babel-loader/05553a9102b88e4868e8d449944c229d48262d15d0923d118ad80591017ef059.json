{"ast":null,"code":"class API {\n  static signin(user) {\n    return fetch(this.signinUrl, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(resp => resp.json());\n  }\n  static signup(user) {\n    return fetch(this.signupUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(resp => resp.json());\n  }\n  static validate() {\n    const token = localStorage.getItem('token');\n    return fetch(this.validateUrl, {\n      headers: {\n        Authorization: token\n      }\n    }).then(resp => resp.json());\n  }\n  static getProducts() {\n    return fetch(this.productsUrl).then(resp => resp.json());\n  }\n  static getCategories() {\n    return fetch(this.categoriesUrl).then(resp => resp.json());\n  }\n  static createProduct(product) {\n    return fetch(this.productsUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify(product)\n    }).then(resp => resp.json());\n  }\n  static removeProductFromSale(id) {\n    return fetch(`${this.productsUrl}/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(resp => resp.json());\n  }\n  static createCustomerBasket(customer) {\n    return fetch(this.basketUrl, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify(customer)\n    }).then(resp => resp.json());\n  }\n  static addToCustomerBasket(product) {\n    return fetch(this.basketProductUrl, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify(product)\n    }).then(resp => resp.json());\n  }\n  static removeProductFromBasket(product_id, basket_id) {\n    return fetch(`${this.removeUrl}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        product_id,\n        basket_id\n      })\n    }).then(resp => resp.json());\n  }\n}\nAPI.baseUrl = 'http://localhost:3000';\nAPI.signinUrl = API.baseUrl + '/signin';\nAPI.signupUrl = API.baseUrl + '/signup';\nAPI.validateUrl = API.baseUrl + '/validate';\nAPI.basketUrl = API.baseUrl + '/baskets';\nAPI.basketProductUrl = API.baseUrl + '/basket_products';\nAPI.productsUrl = API.baseUrl + '/products';\nAPI.removeUrl = API.baseUrl + '/remove';\nAPI.categoriesUrl = API.baseUrl + '/categories';\nAPI.FarmerProfileUrl = API.baseUrl + '/farmer-profile';\nAPI.peepProfileUrl = API.baseUrl + '/peep-profile';\nexport default API;","map":{"version":3,"names":["API","signin","user","fetch","signinUrl","method","headers","body","JSON","stringify","then","resp","json","signup","signupUrl","validate","token","localStorage","getItem","validateUrl","Authorization","getProducts","productsUrl","getCategories","categoriesUrl","createProduct","product","removeProductFromSale","id","createCustomerBasket","customer","basketUrl","addToCustomerBasket","basketProductUrl","removeProductFromBasket","product_id","basket_id","removeUrl","baseUrl","FarmerProfileUrl","peepProfileUrl"],"sources":["/home/volta/PHASE5-PROJECT/Farmart/client/src/data/API.js"],"sourcesContent":["class API {\n    static baseUrl = 'http://localhost:3000'\n    static signinUrl = API.baseUrl + '/signin'\n    static signupUrl = API.baseUrl + '/signup'\n    static validateUrl = API.baseUrl + '/validate'\n    static basketUrl = API.baseUrl + '/baskets'\n    static basketProductUrl = API.baseUrl + '/basket_products'\n    static productsUrl = API.baseUrl + '/products'\n    static removeUrl = API.baseUrl + '/remove'\n    static categoriesUrl = API.baseUrl + '/categories'\n    static FarmerProfileUrl = API.baseUrl + '/farmer-profile'\n    static peepProfileUrl = API.baseUrl + '/peep-profile'\n\n\n    static signin (user) {\n        return fetch(this.signinUrl, {\n            method: \"POST\",\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(user)\n        }).then(resp => resp.json())\n\n       }\n\n    static signup (user) {\n        return fetch(this.signupUrl, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(user)\n        }).then(resp => resp.json())\n\n       }\n\n    static validate () {\n        const token = localStorage.getItem('token')\n        return fetch(this.validateUrl, {\n            headers: { Authorization: token }\n        }).then(resp => resp.json())\n    }\n\n    static getProducts () {\n        return fetch(this.productsUrl)\n        .then(resp => resp.json())\n    }\n    static getCategories () {\n        return fetch(this.categoriesUrl)\n        .then(resp => resp.json())\n    }\n\n    static createProduct (product) {\n        return fetch(this.productsUrl, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify(product)\n        }).then(resp => resp.json())\n     }\n\n    static removeProductFromSale (id) {\n        return fetch(`${this.productsUrl}/${id}`, {\n            method: \"DELETE\",\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n        }).then(resp => resp.json())\n    }\n\n    static createCustomerBasket (customer) {\n        return fetch(this.basketUrl, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify(customer)\n        }).then(resp => resp.json())\n    }\n\n    static addToCustomerBasket (product) {\n        return fetch(this.basketProductUrl, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify(product)\n        }).then(resp => resp.json())\n    }\n\n    static removeProductFromBasket (product_id, basket_id) {\n        return fetch(`${this.removeUrl}`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify({product_id, basket_id})\n        }).then(resp => resp.json())\n    }\n}\n\nexport default API"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}