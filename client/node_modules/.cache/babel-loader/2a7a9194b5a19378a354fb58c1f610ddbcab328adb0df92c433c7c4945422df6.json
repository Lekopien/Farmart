{"ast":null,"code":"var _jsxFileName = \"/home/lekopien/development/code/5/Farmart/client/src/containers/Signin.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport API from '../data/API';\nimport { Alert } from 'react-bootstrap';\nimport NavBar from '../components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')\n});\nconst initialValues = {\n  email: '',\n  password: ''\n};\nconst Signin = _ref => {\n  _s();\n  let {\n    signin\n  } = _ref;\n  const [showAlert, setShowAlert] = useState(false); // Add state to manage visibility of alert\n\n  const handleSubmit = (values, _ref2) => {\n    let {\n      setSubmitting\n    } = _ref2;\n    API.signin(values).then(data => {\n      setSubmitting(false);\n      if (data.error) {\n        setShowAlert(true); // Display alert if email address not found\n      } else {\n        // user is authenticated! \n        signin(values.email, data.user, data.token);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showAlert &&\n    /*#__PURE__*/\n    // Render alert only if showAlert is true\n    _jsxDEV(Alert, {\n      variant: \"danger\",\n      onClose: () => setShowAlert(false),\n      dismissible: true,\n      children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n        children: \"Oops! Something went wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Email address not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validate: values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!isValidEmail(values.email)) {\n          errors.email = 'Invalid email address';\n        }\n        if (!values.password) {\n          errors.password = 'Required';\n        }\n        return errors;\n      },\n      onSubmit: handleSubmit,\n      children: _ref3 => {\n        let {\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Enter email\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(FormText, {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Enter password\",\n              onChange: handleChange,\n              onBlur: handleBlur,\n              value: values.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), errors.password && touched.password && /*#__PURE__*/_jsxDEV(FormText, {\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Signin, \"10vQU8F2+7kcs4/9wLfMdWKVXrU=\");\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Link","Yup","API","Alert","NavBar","jsxDEV","_jsxDEV","validationSchema","object","shape","email","string","required","password","min","initialValues","Signin","_ref","_s","signin","showAlert","setShowAlert","useState","handleSubmit","values","_ref2","setSubmitting","then","data","error","user","token","children","variant","onClose","dismissible","Heading","fileName","_jsxFileName","lineNumber","columnNumber","validate","errors","isValidEmail","onSubmit","_ref3","touched","handleChange","handleBlur","isSubmitting","FormGroup","FormLabel","FormControl","type","name","placeholder","onChange","onBlur","value","FormText","Button","disabled","_c","$RefreshReg$"],"sources":["/home/lekopien/development/code/5/Farmart/client/src/containers/Signin.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport API from '../data/API';\nimport { Alert } from 'react-bootstrap';\nimport NavBar from '../components/NavBar';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required')\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst Signin = ({ signin }) => {\n\n  const [showAlert, setShowAlert] = useState(false); // Add state to manage visibility of alert\n  \n  const handleSubmit = (values, { setSubmitting }) => {\n    API.signin(values)\n      .then(data => {\n        setSubmitting(false);\n        if (data.error){\n          setShowAlert(true); // Display alert if email address not found\n        }\n        else {\n          // user is authenticated! \n          signin(values.email, data.user, data.token);\n        }\n      });\n  };\n\n  return (\n    <div>\n      {showAlert && // Render alert only if showAlert is true\n        <Alert variant=\"danger\" onClose={() => setShowAlert(false)} dismissible>\n          <Alert.Heading>Oops! Something went wrong</Alert.Heading>\n          <p>Email address not found</p>\n        </Alert>\n      }\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validate={values => {\n          const errors = {};\n          if (!values.email) {\n            errors.email = 'Required';\n          } else if (!isValidEmail(values.email)) {\n            errors.email = 'Invalid email address';\n          }\n          if (!values.password) {\n            errors.password = 'Required';\n          }\n          return errors;\n        }}\n        onSubmit={handleSubmit}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting\n        }) => (\n          <Form>\n            <FormGroup>\n              <FormLabel>Email address</FormLabel>\n              <FormControl\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && <FormText>{errors.email}</FormText>}\n            </FormGroup>\n            <FormGroup>\n              <FormLabel>Password</FormLabel>\n              <FormControl\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter password\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password && <FormText>{errors.password}</FormText>}\n            </FormGroup>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={isSubmitting}\n            >\n              Sign in\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Signin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}