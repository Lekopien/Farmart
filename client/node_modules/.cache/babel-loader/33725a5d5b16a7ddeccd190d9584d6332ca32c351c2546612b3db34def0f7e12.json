{"ast":null,"code":"var _jsxFileName = \"/home/thuku/Development/code/projects/Farmart/client/src/containers/Signup.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../data/API';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = _ref => {\n  let {\n    signup,\n    history\n  } = _ref;\n  const initialValues = {\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    phone: '',\n    password: '',\n    userType: ''\n  };\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    firstName: Yup.string().required('Required'),\n    lastName: Yup.string().required('Required'),\n    address: Yup.string().required('Required'),\n    phone: Yup.string().required('Required'),\n    password: Yup.string().required('Required'),\n    userType: Yup.string().required('Required')\n  });\n  const handleSubmit = (values, _ref2) => {\n    let {\n      setSubmitting\n    } = _ref2;\n    API.signup(values).then(data => {\n      if (data.error) {\n        alert('Not working!');\n      } else {\n        // User is authenticated\n        signup(values.email, values.userType);\n        history.push('/signin');\n      }\n      setSubmitting(false);\n    }).catch(error => {\n      console.log(error);\n      setSubmitting(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"create-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-create\",\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","API","jsxDEV","_jsxDEV","Signup","_ref","signup","history","initialValues","email","firstName","lastName","address","phone","password","userType","validationSchema","object","shape","string","required","handleSubmit","values","_ref2","setSubmitting","then","data","error","alert","push","catch","console","log","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/thuku/Development/code/projects/Farmart/client/src/containers/Signup.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../data/API';\n\nconst Signup = ({ signup, history }) => {\n\n  const initialValues = {\n    email: '',\n    firstName: '',\n    lastName: '',\n    address: '',\n    phone: '',\n    password: '',\n    userType: ''\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email('Invalid email').required('Required'),\n    firstName: Yup.string().required('Required'),\n    lastName: Yup.string().required('Required'),\n    address: Yup.string().required('Required'),\n    phone: Yup.string().required('Required'),\n    password: Yup.string().required('Required'),\n    userType: Yup.string().required('Required')\n  });\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    API.signup(values)\n      .then(data => {\n        if (data.error) {\n          alert('Not working!');\n        } else {\n          // User is authenticated\n          signup(values.email, values.userType);\n          history.push('/signin');\n        }\n        setSubmitting(false);\n      })\n      .catch(error => {\n        console.log(error);\n        setSubmitting(false);\n      });\n    };\n    \n    return (\n    <div id='create-container' >\n      <div className='image-create'>hello</div>\n      <div className='form-create'>\n      \n      \n          \n      </div>\n    </div>\n    );\n    };\n    \n    export default Signup;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,GAAG,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,MAAM,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,MAAM;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAEjC,MAAMG,aAAa,GAAG;IACpBC,KAAK,EAAE,EAAE;IACTC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,gBAAgB,GAAGhB,GAAG,CAACiB,MAAM,EAAE,CAACC,KAAK,CAAC;IAC1CT,KAAK,EAAET,GAAG,CAACmB,MAAM,EAAE,CAACV,KAAK,CAAC,eAAe,CAAC,CAACW,QAAQ,CAAC,UAAU,CAAC;IAC/DV,SAAS,EAAEV,GAAG,CAACmB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC5CT,QAAQ,EAAEX,GAAG,CAACmB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC3CR,OAAO,EAAEZ,GAAG,CAACmB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC1CP,KAAK,EAAEb,GAAG,CAACmB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IACxCN,QAAQ,EAAEd,GAAG,CAACmB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU,CAAC;IAC3CL,QAAQ,EAAEf,GAAG,CAACmB,MAAM,EAAE,CAACC,QAAQ,CAAC,UAAU;EAC5C,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGA,CAACC,MAAM,EAAAC,KAAA,KAAwB;IAAA,IAAtB;MAAEC;IAAc,CAAC,GAAAD,KAAA;IAC7CtB,GAAG,CAACK,MAAM,CAACgB,MAAM,CAAC,CACfG,IAAI,CAACC,IAAI,IAAI;MACZ,IAAIA,IAAI,CAACC,KAAK,EAAE;QACdC,KAAK,CAAC,cAAc,CAAC;MACvB,CAAC,MAAM;QACL;QACAtB,MAAM,CAACgB,MAAM,CAACb,KAAK,EAAEa,MAAM,CAACP,QAAQ,CAAC;QACrCR,OAAO,CAACsB,IAAI,CAAC,SAAS,CAAC;MACzB;MACAL,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC,CACDM,KAAK,CAACH,KAAK,IAAI;MACdI,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MAClBH,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;EAED,oBACArB,OAAA;IAAK8B,EAAE,EAAC,kBAAkB;IAAAC,QAAA,gBACxB/B,OAAA;MAAKgC,SAAS,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzCpC,OAAA;MAAKgC,SAAS,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAItB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEN,CAAC;AAACC,EAAA,GAlDApC,MAAM;AAoDR,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}