{"ast":null,"code":"class API {\n  // static signin (user) {\n  //     return fetch(this.signinUrl, {\n  //         method: \"POST\",\n  //         headers: {'Content-Type': 'application/json'},\n  //         body: JSON.stringify(user)\n  //     }).then(resp => resp.json())\n  //    }\n  static signup(user) {\n    return fetch(this.signupUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(resp => resp.json());\n  }\n  static validate() {\n    const token = localStorage.getItem('token');\n    return fetch(this.validateUrl, {\n      headers: {\n        Authorization: token\n      }\n    }).then(resp => resp.json());\n  }\n  static getProducts() {\n    return fetch(this.productsUrl).then(resp => resp.json());\n  }\n  static getCategories() {\n    return fetch(this.categoriesUrl).then(resp => resp.json());\n  }\n  static createProduct(product) {\n    return fetch(this.productsUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify(product)\n    }).then(resp => resp.json());\n  }\n  static removeProductFromSale(id) {\n    return fetch(`${this.productsUrl}/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      }\n    }).then(resp => resp.json());\n  }\n  static createCustomerBasket(customer) {\n    return fetch(this.basketUrl, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify(customer)\n    }).then(resp => resp.json());\n  }\n  static addToCustomerBasket(product) {\n    return fetch(this.basketProductUrl, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify(product)\n    }).then(resp => resp.json());\n  }\n  static removeProductFromBasket(product_id, basket_id) {\n    return fetch(`${this.removeUrl}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        product_id,\n        basket_id\n      })\n    }).then(resp => resp.json());\n  }\n}\nAPI.baseUrl = 'http://localhost:3000';\nAPI.signinUrl = API.baseUrl + '/signin';\nAPI.signupUrl = API.baseUrl + '/signup';\nAPI.validateUrl = API.baseUrl + '/validate';\nAPI.basketUrl = API.baseUrl + '/baskets';\nAPI.basketProductUrl = API.baseUrl + '/basket_products';\nAPI.productsUrl = API.baseUrl + '/products';\nAPI.removeUrl = API.baseUrl + '/remove';\nAPI.categoriesUrl = API.baseUrl + '/categories';\nAPI.FarmerProfileUrl = API.baseUrl + '/farmer-profile';\nAPI.peepProfileUrl = API.baseUrl + '/peep-profile';\nexport default API;","map":{"version":3,"names":["API","signup","user","fetch","signupUrl","method","headers","body","JSON","stringify","then","resp","json","validate","token","localStorage","getItem","validateUrl","Authorization","getProducts","productsUrl","getCategories","categoriesUrl","createProduct","product","removeProductFromSale","id","createCustomerBasket","customer","basketUrl","addToCustomerBasket","basketProductUrl","removeProductFromBasket","product_id","basket_id","removeUrl","baseUrl","signinUrl","FarmerProfileUrl","peepProfileUrl"],"sources":["/home/lekopien/development/code/5/Farmart/client/src/data/API.js"],"sourcesContent":["class API {\n    static baseUrl = 'http://localhost:3000'\n    static signinUrl = API.baseUrl + '/signin'\n    static signupUrl = API.baseUrl + '/signup'\n    static validateUrl = API.baseUrl + '/validate'\n    static basketUrl = API.baseUrl + '/baskets'\n    static basketProductUrl = API.baseUrl + '/basket_products'\n    static productsUrl = API.baseUrl + '/products'\n    static removeUrl = API.baseUrl + '/remove'\n    static categoriesUrl = API.baseUrl + '/categories'\n    static FarmerProfileUrl = API.baseUrl + '/farmer-profile'\n    static peepProfileUrl = API.baseUrl + '/peep-profile'\n\n\n    // static signin (user) {\n    //     return fetch(this.signinUrl, {\n    //         method: \"POST\",\n    //         headers: {'Content-Type': 'application/json'},\n    //         body: JSON.stringify(user)\n    //     }).then(resp => resp.json())\n    \n    //    }\n    \n    \n    static signup (user) {\n        return fetch(this.signupUrl, {\n            method: 'POST', \n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(user)\n        }).then(resp => resp.json())       \n\n       }\n    \n    static validate () {\n        const token = localStorage.getItem('token') \n        return fetch(this.validateUrl, {\n            headers: { Authorization: token }\n        }).then(resp => resp.json())\n    }\n    \n\n    static getProducts () {\n        return fetch(this.productsUrl)\n        .then(resp => resp.json())\n    }\n    \n    static getCategories () {\n        return fetch(this.categoriesUrl)\n        .then(resp => resp.json())\n    }\n\n    static createProduct (product) {\n        return fetch(this.productsUrl, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify(product)\n        }).then(resp => resp.json())\n     }\n\n    static removeProductFromSale (id) {\n        return fetch(`${this.productsUrl}/${id}`, {\n            method: \"DELETE\",\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n        }).then(resp => resp.json())\n    }\n\n    static createCustomerBasket (customer) {\n        return fetch(this.basketUrl, {\n            method: 'POST', \n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify(customer)\n        }).then(resp => resp.json())\n    }\n\n    static addToCustomerBasket (product) {\n        return fetch(this.basketProductUrl, {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify(product)\n        }).then(resp => resp.json())\n    }\n\n    static removeProductFromBasket (product_id, basket_id) {\n        return fetch(`${this.removeUrl}`, {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\",\n            Authorization: localStorage.getItem('token') },\n            body: JSON.stringify({product_id, basket_id})\n        }).then(resp => resp.json())\n    }\n}\n\nexport default API"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}